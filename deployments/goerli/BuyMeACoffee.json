{
  "address": "0xAA7977A4A0d4548870Ef41e70cE1C342f2fe9F4C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "minTip",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "BuyMeACoffee__DidNotTipEnough",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "BuyMeACoffee__WithdrawFailed",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timeStamp",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "NewMemo",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "message",
          "type": "string"
        }
      ],
      "name": "buyCoffee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMemos",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "timeStamp",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "message",
              "type": "string"
            }
          ],
          "internalType": "struct BuyMeACoffee.Memo[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getMinTip",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getWithdrawalAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newWithdrawalAddress",
          "type": "address"
        }
      ],
      "name": "setWithdrawalAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xcb0bd8b4366afad6224d3e0573a9b7907d803d4851298658a6ddef1a5a572040",
  "receipt": {
    "to": null,
    "from": "0x0fdB63105291aB806c09274FA8Df08F58A07d811",
    "contractAddress": "0xAA7977A4A0d4548870Ef41e70cE1C342f2fe9F4C",
    "transactionIndex": 17,
    "gasUsed": "1017576",
    "logsBloom": "0x
    "blockHash": "0x247c6512c70e96f790ba07a2ed4d5ee5e3bf66d6bc05a70485490b89d2c1a660",
    "transactionHash": "0xcb0bd8b4366afad6224d3e0573a9b7907d803d4851298658a6ddef1a5a572040",
    "logs": [
      {
        "transactionIndex": 17,
        "blockNumber": 7419124,
        "transactionHash": "0xcb0bd8b4366afad6224d3e0573a9b7907d803d4851298658a6ddef1a5a572040",
        "address": "0xAA7977A4A0d4548870Ef41e70cE1C342f2fe9F4C",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000000fdb63105291ab806c09274fa8df08f58a07d811"
        ],
        "data": "0x",
        "logIndex": 70,
        "blockHash": "0x247c6512c70e96f790ba07a2ed4d5ee5e3bf66d6bc05a70485490b89d2c1a660"
      }
    ],
    "blockNumber": 7419124,
    "cumulativeGasUsed": "7067935",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "10000000000000000"
  ],
  "numDeployments": 1,
  "solcInputHash": "c9099874319c15f4aead98354d25fba5",
  "metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"minTip\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"BuyMeACoffee__DidNotTipEnough\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BuyMeACoffee__WithdrawFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timeStamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"NewMemo\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"name\":\"buyCoffee\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMemos\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timeStamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"message\",\"type\":\"string\"}],\"internalType\":\"struct BuyMeACoffee.Memo[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getMinTip\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getWithdrawalAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newWithdrawalAddress\",\"type\":\"address\"}],\"name\":\"setWithdrawalAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BuyMeACoffee.sol\":\"BuyMeACoffee\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/BuyMeACoffee.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.7;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\nerror BuyMeACoffee__DidNotTipEnough();\\nerror BuyMeACoffee__WithdrawFailed();\\n\\ncontract BuyMeACoffee is Ownable {\\n    event NewMemo(address indexed from, uint256 timeStamp, string name, string message);\\n\\n    struct Memo {\\n        address from;\\n        uint256 timeStamp;\\n        string name;\\n        string message;\\n    }\\n\\n    uint256 private immutable i_minTip;\\n    address payable private s_withdrawalAddress;\\n    Memo[] private s_memos;\\n\\n    constructor(uint256 minTip) {\\n        i_minTip = minTip;\\n        s_withdrawalAddress = payable(msg.sender);\\n    }\\n\\n    function buyCoffee(string memory name, string memory message) public payable {\\n        if (msg.value < i_minTip) {\\n            revert BuyMeACoffee__DidNotTipEnough();\\n        }\\n\\n        s_memos.push(Memo(msg.sender, block.timestamp, name, message));\\n\\n        emit NewMemo(msg.sender, block.timestamp, name, message);\\n    }\\n\\n    function withdraw() public onlyOwner {\\n        uint256 amount = address(this).balance;\\n\\n        (bool success, ) = s_withdrawalAddress.call{ value: amount }(\\\"\\\");\\n\\n        if (!success) {\\n            revert BuyMeACoffee__WithdrawFailed();\\n        }\\n    }\\n\\n    function setWithdrawalAddress(address newWithdrawalAddress) public {\\n        s_withdrawalAddress = payable(newWithdrawalAddress);\\n    }\\n\\n    function getMemos() public view returns (Memo[] memory) {\\n        return s_memos;\\n    }\\n\\n    function getMinTip() public view returns (uint256) {\\n        return i_minTip;\\n    }\\n\\n    function getWithdrawalAddress() public view returns (address) {\\n        return s_withdrawalAddress;\\n    }\\n}\\n\",\"keccak256\":\"0xbb371c6d8a0e95b451a8fc08960e713bc79fa5e1a1ab649e05c346cc7c0710c0\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620012903803806200129083398181016040528101906200003791906200018a565b620000576200004b620000a760201b60201c565b620000af60201b60201c565b806080818152505033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001e5565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200018481620001cb565b92915050565b600060208284031215620001a357620001a2620001c6565b5b6000620001b38482850162000173565b91505092915050565b6000819050919050565b600080fd5b620001d681620001bc565b8114620001e257600080fd5b50565b60805161108862000208600039600081816101d501526106b001526110886000f3fe6080604052600436106100865760003560e01c8063865c517211610059578063865c5172146100fe5780638da5cb5b146101295780639ceddef614610154578063ec8f3fa51461017f578063f2fde38b146101aa57610086565b8063204206e11461008b57806321b8092e146100a75780633ccfd60b146100d0578063715018a6146100e7575b600080fd5b6100a560048036038101906100a09190610a21565b6101d3565b005b3480156100b357600080fd5b506100ce60048036038101906100c991906109f4565b610372565b005b3480156100dc57600080fd5b506100e56103b6565b005b3480156100f357600080fd5b506100fc61048c565b005b34801561010a57600080fd5b506101136104a0565b6040516101209190610cd3565b60405180910390f35b34801561013557600080fd5b5061013e610683565b60405161014b9190610cb8565b60405180910390f35b34801561016057600080fd5b506101696106ac565b6040516101769190610d35565b60405180910390f35b34801561018b57600080fd5b506101946106d4565b6040516101a19190610cb8565b60405180910390f35b3480156101b657600080fd5b506101d160048036038101906101cc91906109f4565b6106fe565b005b7f000000000000000000000000000000000000000000000000000000000000000034101561022d576040517f41f072b400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200183815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906102fc9291906108cc565b5060608201518160030190805190602001906103199291906108cc565b5050503373ffffffffffffffffffffffffffffffffffffffff167fc56140e05f516509ae28110e0f72e17558a7561630dad2647c3ae87d986e365c42848460405161036693929190610d50565b60405180910390a25050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6103be610782565b60004790506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161040b90610ca3565b60006040518083038185875af1925050503d8060008114610448576040519150601f19603f3d011682016040523d82523d6000602084013e61044d565b606091505b5050905080610488576040517ffaba0a1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610494610782565b61049e6000610800565b565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101561067a57838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805461055790610eda565b80601f016020809104026020016040519081016040528092919081815260200182805461058390610eda565b80156105d05780601f106105a5576101008083540402835291602001916105d0565b820191906000526020600020905b8154815290600101906020018083116105b357829003601f168201915b505050505081526020016003820180546105e990610eda565b80601f016020809104026020016040519081016040528092919081815260200182805461061590610eda565b80156106625780601f1061063757610100808354040283529160200191610662565b820191906000526020600020905b81548152906001019060200180831161064557829003601f168201915b505050505081525050815260200190600101906104c4565b50505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610706610782565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076d90610cf5565b60405180910390fd5b61077f81610800565b50565b61078a6108c4565b73ffffffffffffffffffffffffffffffffffffffff166107a8610683565b73ffffffffffffffffffffffffffffffffffffffff16146107fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f590610d15565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b8280546108d890610eda565b90600052602060002090601f0160209004810192826108fa5760008555610941565b82601f1061091357805160ff1916838001178555610941565b82800160010185558215610941579182015b82811115610940578251825591602001919060010190610925565b5b50905061094e9190610952565b5090565b5b8082111561096b576000816000905550600101610953565b5090565b600061098261097d84610dba565b610d95565b90508281526020810184848401111561099e5761099d610fa0565b5b6109a9848285610e98565b509392505050565b6000813590506109c08161103b565b92915050565b600082601f8301126109db576109da610f9b565b5b81356109eb84826020860161096f565b91505092915050565b600060208284031215610a0a57610a09610faa565b5b6000610a18848285016109b1565b91505092915050565b60008060408385031215610a3857610a37610faa565b5b600083013567ffffffffffffffff811115610a5657610a55610fa5565b5b610a62858286016109c6565b925050602083013567ffffffffffffffff811115610a8357610a82610fa5565b5b610a8f858286016109c6565b9150509250929050565b6000610aa58383610c1b565b905092915050565b610ab681610e5c565b82525050565b610ac581610e5c565b82525050565b6000610ad682610dfb565b610ae08185610e1e565b935083602082028501610af285610deb565b8060005b85811015610b2e5784840389528151610b0f8582610a99565b9450610b1a83610e11565b925060208a01995050600181019050610af6565b50829750879550505050505092915050565b6000610b4b82610e06565b610b558185610e3a565b9350610b65818560208601610ea7565b610b6e81610faf565b840191505092915050565b6000610b8482610e06565b610b8e8185610e4b565b9350610b9e818560208601610ea7565b610ba781610faf565b840191505092915050565b6000610bbf602683610e4b565b9150610bca82610fc0565b604082019050919050565b6000610be2602083610e4b565b9150610bed8261100f565b602082019050919050565b6000610c05600083610e2f565b9150610c1082611038565b600082019050919050565b6000608083016000830151610c336000860182610aad565b506020830151610c466020860182610c85565b5060408301518482036040860152610c5e8282610b40565b91505060608301518482036060860152610c788282610b40565b9150508091505092915050565b610c8e81610e8e565b82525050565b610c9d81610e8e565b82525050565b6000610cae82610bf8565b9150819050919050565b6000602082019050610ccd6000830184610abc565b92915050565b60006020820190508181036000830152610ced8184610acb565b905092915050565b60006020820190508181036000830152610d0e81610bb2565b9050919050565b60006020820190508181036000830152610d2e81610bd5565b9050919050565b6000602082019050610d4a6000830184610c94565b92915050565b6000606082019050610d656000830186610c94565b8181036020830152610d778185610b79565b90508181036040830152610d8b8184610b79565b9050949350505050565b6000610d9f610db0565b9050610dab8282610f0c565b919050565b6000604051905090565b600067ffffffffffffffff821115610dd557610dd4610f6c565b5b610dde82610faf565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610e6782610e6e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610ec5578082015181840152602081019050610eaa565b83811115610ed4576000848401525b50505050565b60006002820490506001821680610ef257607f821691505b60208210811415610f0657610f05610f3d565b5b50919050565b610f1582610faf565b810181811067ffffffffffffffff82111715610f3457610f33610f6c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b50565b61104481610e5c565b811461104f57600080fd5b5056fea264697066735822122023a52a0e3014278c6317a52369b4af1914369e67bda1da032f92a8b82a9c9c1a64736f6c63430008070033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063865c517211610059578063865c5172146100fe5780638da5cb5b146101295780639ceddef614610154578063ec8f3fa51461017f578063f2fde38b146101aa57610086565b8063204206e11461008b57806321b8092e146100a75780633ccfd60b146100d0578063715018a6146100e7575b600080fd5b6100a560048036038101906100a09190610a21565b6101d3565b005b3480156100b357600080fd5b506100ce60048036038101906100c991906109f4565b610372565b005b3480156100dc57600080fd5b506100e56103b6565b005b3480156100f357600080fd5b506100fc61048c565b005b34801561010a57600080fd5b506101136104a0565b6040516101209190610cd3565b60405180910390f35b34801561013557600080fd5b5061013e610683565b60405161014b9190610cb8565b60405180910390f35b34801561016057600080fd5b506101696106ac565b6040516101769190610d35565b60405180910390f35b34801561018b57600080fd5b506101946106d4565b6040516101a19190610cb8565b60405180910390f35b3480156101b657600080fd5b506101d160048036038101906101cc91906109f4565b6106fe565b005b7f000000000000000000000000000000000000000000000000000000000000000034101561022d576040517f41f072b400000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600260405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200184815260200183815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190805190602001906102fc9291906108cc565b5060608201518160030190805190602001906103199291906108cc565b5050503373ffffffffffffffffffffffffffffffffffffffff167fc56140e05f516509ae28110e0f72e17558a7561630dad2647c3ae87d986e365c42848460405161036693929190610d50565b60405180910390a25050565b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6103be610782565b60004790506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168260405161040b90610ca3565b60006040518083038185875af1925050503d8060008114610448576040519150601f19603f3d011682016040523d82523d6000602084013e61044d565b606091505b5050905080610488576040517ffaba0a1600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050565b610494610782565b61049e6000610800565b565b60606002805480602002602001604051908101604052809291908181526020016000905b8282101561067a57838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820154815260200160028201805461055790610eda565b80601f016020809104026020016040519081016040528092919081815260200182805461058390610eda565b80156105d05780601f106105a5576101008083540402835291602001916105d0565b820191906000526020600020905b8154815290600101906020018083116105b357829003601f168201915b505050505081526020016003820180546105e990610eda565b80601f016020809104026020016040519081016040528092919081815260200182805461061590610eda565b80156106625780601f1061063757610100808354040283529160200191610662565b820191906000526020600020905b81548152906001019060200180831161064557829003601f168201915b505050505081525050815260200190600101906104c4565b50505050905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610706610782565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610776576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161076d90610cf5565b60405180910390fd5b61077f81610800565b50565b61078a6108c4565b73ffffffffffffffffffffffffffffffffffffffff166107a8610683565b73ffffffffffffffffffffffffffffffffffffffff16146107fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f590610d15565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b8280546108d890610eda565b90600052602060002090601f0160209004810192826108fa5760008555610941565b82601f1061091357805160ff1916838001178555610941565b82800160010185558215610941579182015b82811115610940578251825591602001919060010190610925565b5b50905061094e9190610952565b5090565b5b8082111561096b576000816000905550600101610953565b5090565b600061098261097d84610dba565b610d95565b90508281526020810184848401111561099e5761099d610fa0565b5b6109a9848285610e98565b509392505050565b6000813590506109c08161103b565b92915050565b600082601f8301126109db576109da610f9b565b5b81356109eb84826020860161096f565b91505092915050565b600060208284031215610a0a57610a09610faa565b5b6000610a18848285016109b1565b91505092915050565b60008060408385031215610a3857610a37610faa565b5b600083013567ffffffffffffffff811115610a5657610a55610fa5565b5b610a62858286016109c6565b925050602083013567ffffffffffffffff811115610a8357610a82610fa5565b5b610a8f858286016109c6565b9150509250929050565b6000610aa58383610c1b565b905092915050565b610ab681610e5c565b82525050565b610ac581610e5c565b82525050565b6000610ad682610dfb565b610ae08185610e1e565b935083602082028501610af285610deb565b8060005b85811015610b2e5784840389528151610b0f8582610a99565b9450610b1a83610e11565b925060208a01995050600181019050610af6565b50829750879550505050505092915050565b6000610b4b82610e06565b610b558185610e3a565b9350610b65818560208601610ea7565b610b6e81610faf565b840191505092915050565b6000610b8482610e06565b610b8e8185610e4b565b9350610b9e818560208601610ea7565b610ba781610faf565b840191505092915050565b6000610bbf602683610e4b565b9150610bca82610fc0565b604082019050919050565b6000610be2602083610e4b565b9150610bed8261100f565b602082019050919050565b6000610c05600083610e2f565b9150610c1082611038565b600082019050919050565b6000608083016000830151610c336000860182610aad565b506020830151610c466020860182610c85565b5060408301518482036040860152610c5e8282610b40565b91505060608301518482036060860152610c788282610b40565b9150508091505092915050565b610c8e81610e8e565b82525050565b610c9d81610e8e565b82525050565b6000610cae82610bf8565b9150819050919050565b6000602082019050610ccd6000830184610abc565b92915050565b60006020820190508181036000830152610ced8184610acb565b905092915050565b60006020820190508181036000830152610d0e81610bb2565b9050919050565b60006020820190508181036000830152610d2e81610bd5565b9050919050565b6000602082019050610d4a6000830184610c94565b92915050565b6000606082019050610d656000830186610c94565b8181036020830152610d778185610b79565b90508181036040830152610d8b8184610b79565b9050949350505050565b6000610d9f610db0565b9050610dab8282610f0c565b919050565b6000604051905090565b600067ffffffffffffffff821115610dd557610dd4610f6c565b5b610dde82610faf565b9050602081019050919050565b6000819050602082019050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600081905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000610e6782610e6e565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015610ec5578082015181840152602081019050610eaa565b83811115610ed4576000848401525b50505050565b60006002820490506001821680610ef257607f821691505b60208210811415610f0657610f05610f3d565b5b50919050565b610f1582610faf565b810181811067ffffffffffffffff82111715610f3457610f33610f6c565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b50565b61104481610e5c565b811461104f57600080fd5b5056fea264697066735822122023a52a0e3014278c6317a52369b4af1914369e67bda1da032f92a8b82a9c9c1a64736f6c63430008070033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 166,
        "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
        "label": "s_withdrawalAddress",
        "offset": 0,
        "slot": "1",
        "type": "t_address_payable"
      },
      {
        "astId": 170,
        "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
        "label": "s_memos",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_struct(Memo)162_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(Memo)162_storage)dyn_storage": {
        "base": "t_struct(Memo)162_storage",
        "encoding": "dynamic_array",
        "label": "struct BuyMeACoffee.Memo[]",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Memo)162_storage": {
        "encoding": "inplace",
        "label": "struct BuyMeACoffee.Memo",
        "members": [
          {
            "astId": 155,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "from",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 157,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "timeStamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 159,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "name",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 161,
            "contract": "contracts/BuyMeACoffee.sol:BuyMeACoffee",
            "label": "message",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}